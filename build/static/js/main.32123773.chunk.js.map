{"version":3,"sources":["actions/types.js","reducers/auth.js","reducers/message.js","reducers/index.js","store.js","i18n.js","App.js","serviceWorker.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","DATA_SUCCESS","DATA_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","combineReducers","auth","state","arguments","length","undefined","action","type","payload","_objectSpread","message","middleware","thunk","loggerMiddleware","createLogger","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","concat","i18n","use","Backend","initReactI18next","init","lng","backend","loadPath","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","LoginAdmin","lazy","DashboardAdmin","CategoryList","SubCategoryList","BannerList","BrandList","CountryList","ModelList","StateList","CityList","ProductList","ClientList","UserList","YearList","LoginUser","Website","App","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","isTokenFound","isloading","_createClass","key","value","_this2","token","this","setState","console","log","React","createElement","Suspense","fallback","Switch","Route","exact","path","component","Component","connect","Boolean","window","location","hostname","match","ReactDOM","render","Provider","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.32123773.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const OTP_SUCCESS = \"OTP_SUCCESS\";\nexport const OTP_FAIL = \"OTP_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const DATA_SUCCESS = \"DATA_SUCCESS\";\nexport const DATA_FAIL = \"DATA_FAIL\";\n\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport message from \"./message\";\n\nexport default combineReducers({\n  auth,\n  message,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from 'redux-logger';\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst loggerMiddleware = createLogger();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware, loggerMiddleware))\n);\n\nexport default store;","import i18n from 'i18next'\nimport Backend from 'i18next-xhr-backend'\nimport { initReactI18next } from 'react-i18next'\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    lng: 'zh-hk',\n    backend: {\n      /* translation file path */\n      \n      loadPath: '/assets/i18n/{{ns}}/{{lng}}.json'\n    },\n    fallbackLng: 'zh-hk',\n    debug: true,\n    /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\n    ns: ['translations'],\n    defaultNS: 'translations',\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false,\n      formatSeparator: ','\n    },\n    react: {\n      wait: true\n    }\n  })\n\nexport default i18n\n","import React, { Component, Suspense, lazy } from \"react\";\n\nimport { connect } from \"react-redux\";\n//import { Route, Router, BrowserRouter, Switch,Redirect,useHistory,withRouter,Link } from 'react-router-dom';\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\n\nimport \"./i18n\";\n/*import \"bootstrap/dist/css/bootstrap.min.css\";\nimport $ from \"jquery\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";*/\n\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n\n//Admin Section\nconst LoginAdmin = lazy(() => import(\"./components/admin/Login\"));\nconst LoginWebsite = lazy(() => import(\"./components/website/Login\"));\nconst DashboardAdmin = lazy(() => import(\"./components/admin/Dashboard\"));\n// const TicketsAdmin =lazy(() =>import ('./components/admin/Tickets'));\n\nconst CategoryList = lazy(() => import(\"./components/admin/CategoryList\"));\n\nconst SubCategoryList = lazy(() =>\n  import(\"./components/admin/SubCategoryList\")\n);\nconst BannerList = lazy(() => import(\"./components/admin/BannerList\"));\nconst BrandList = lazy(() => import(\"./components/admin/BrandList\"));\nconst CountryList = lazy(() => import(\"./components/admin/CountryList\"));\nconst ModelList = lazy(() => import(\"./components/admin/ModelList\"));\nconst StateList = lazy(() => import(\"./components/admin/StateList\"));\nconst CityList = lazy(() => import(\"./components/admin/CityList\"));\nconst ProductList = lazy(() => import(\"./components/admin/ProductList\"));\nconst ClientList = lazy(() => import(\"./components/admin/ClientList\"));\nconst UserList = lazy(() => import(\"./components/admin/UserList\"));\nconst YearList = lazy(() => import(\"./components/admin/Year\"));\n\n//User Section\nconst LoginUser = lazy(() => import(\"./components/user/Login\"));\nconst DashboardUser = lazy(() => import(\"./components/user/Dashboard\"));\n\n// const TaskUser =lazy(() =>import ('./components/user/TaskList'));\n// const SubTaskUser =lazy(() =>import ('./components/user/SubTaskList'));\n\n// const MaterialCategoryUser =lazy(() =>import ('./components/user/MaterialCategoryList'));\n// const MaterialInputTypeUser =lazy(() =>import ('./components/user/MaterialInputTypeList'));\n\n// const TeamUser =lazy(() =>import ('./components/user/TeamList'));\n// const ProfileUser =lazy(() =>import ('./components/user/ProfileList'));\n// const DesignationUser =lazy(() =>import ('./components/user/DesignationList'));\n// const UserUser =lazy(() =>import ('./components/user/UserList'));\n\n// const LiftSpecificationsUser =lazy(() =>import ('./components/user/LiftSpecificationsList'));\n\n// const ClientListUser =lazy(() =>import ('./components/user/ClientList'));\n// const VendorListUser =lazy(() =>import ('./components/user/VendorList'));\n// const VendorItemsListUser =lazy(() =>import ('./components/user/VendorItemsList'));\n\n// const TicketsUser =lazy(() =>import ('./components/user/Tickets'));\n// const TicketsListUser =lazy(() =>import ('./components/user/TicketsList'));\n// const TicketInfoUser =lazy(() =>import ('./components/user/TicketInfo'));\n// const TicketAddUser =lazy(() =>import ('./components/user/TicketAdd'));\n// const TicketAddNewUser =lazy(() =>import ('./components/user/TicketAddNew'));\n\n// const ProposalUser =lazy(() =>import ('./components/user/Proposal'));\n// const ProposalListUser =lazy(() =>import ('./components/user/ProposalList'));\n// const ProposalInfoUser =lazy(() =>import ('./components/user/ProposalInfo'));\n// const ProposalAddUser =lazy(() =>import ('./components/user/ProposalAdd'));\n// const ProposalAddNewUser =lazy(() =>import ('./components/user/ProposalAddNew'));\n// const ProposalAddOldUser =lazy(() =>import ('./components/user/ProposalAddOld'));\n\n// const ProposalAddNew =lazy(() =>import ('./components/user/ProposalAddNew'));\n// const ProposalAddNewOrderConfrimation =lazy(() =>import ('./components/user/ProposalAddNewOrderConfrimation'));\n// const ProposalAddNewInternalOrder =lazy(() =>import ('./components/user/ProposalAddNewInternalOrder'));\n\n// const ArchitectureList =lazy(() =>import ('./components/user/ArchitectureList'));\n\n//website URLs\nconst Website = lazy(() => import(\"./components/website/index\"));\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isTokenFound: false,\n      isloading: false,\n    \n    };\n  }\n\n  componentDidMount() {\n    \n   \n    let token = JSON.parse(localStorage.getItem(\"user\"));\n// alert(token)\n    if (token && token !== \"\" && typeof token !== \"undefined\") {\n      this.setState({\n        isTokenFound: true\n      },()=>{console.log(\"ISTOKEN\",this.state.isTokenFound);})\n    }\n    else{\n      this.setState({\n        isTokenFound:false\n      })\n    }\n    // var lang = localStorage.getItem(\"user\");\n    // if (lang != null) {\n    //   this.setState({\n    //     isTokenFound: true,\n    //   });\n    // }\n  }\n\n  render() {\n    //const { currentUser } = this.state;\n\n    return (\n      <Suspense fallback={<div></div>}>\n        <Switch>\n\n         {this.state.isTokenFound ==false && <Route exact path=\"/admin\" component={LoginUser} />}\n         {this.state.isTokenFound && <Route exact path=\"/admin\" component={DashboardAdmin} />}\n\n          <Route exact path=\"/admin/login\" component={LoginAdmin} />\n          {/* <Route exact path=\"/web/login\" component={LoginWebsite} /> */}\n\n\n          {/* {(() => {\n              if (this.state.isTokenFound) {\n                \n                return ( */}\n                {/* {this.state.isTokenFound && <> */}\n\n          <Route exact path=\"/admin/dashboard\" component={DashboardAdmin} />\n\n          <Route exact path=\"/admin/category/list\" component={CategoryList} />\n          <Route\n            exact\n            path=\"/admin/subcategory/list\"\n            component={SubCategoryList}\n          />\n          <Route exact path=\"/admin/banner/list\" component={BannerList} />\n          <Route exact path=\"/admin/brand/list\" component={BrandList} />\n          <Route exact path=\"/admin/model/list\" component={ModelList} />\n\n          <Route exact path=\"/admin/country/list\" component={CountryList} />\n          <Route exact path=\"/admin/state/list\" component={StateList} />\n          <Route exact path=\"/admin/city/list\" component={CityList} />\n          <Route exact path=\"/admin/product/list\" component={ProductList} />\n          <Route exact path=\"/admin/client/list\" component={ClientList} />\n          <Route exact path=\"/admin/user/list\" component={UserList} />\n          <Route exact path=\"/admin/year\" component={YearList} />\n        {/* </>} */}\n        {/* )}})} */}\n\n          {/*website Path*/}\n          {<Route path=\"/\" component={Website} />}\n        </Switch>\n      </Suspense>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\n\nimport \"./assets/css/bootstrap.min.css\";\nimport \"./assets/css/font-awesome.min.css\";\nimport \"./assets/css/style.css\";\nimport \"./App.css\";\n\n/*import \"./assets/js/jquery-3.5.1.min.js\";\nimport \"./assets/js/popper.min.js\";\nimport \"./assets/js/bootstrap.min.js\";\nimport \"./assets/js/app.js\";*/\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can chađinge\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}