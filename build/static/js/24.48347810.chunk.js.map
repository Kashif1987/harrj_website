{"version":3,"sources":["services/auth.service.js","actions/auth.js","components/user/Login.js","helpers/history.js","actions/message.js","services/auth-header.js","assets/img/logo2.png"],"names":["API_URL","process","AuthService","_classCallCheck","_createClass","key","value","email_id","password","insertData","FormData","set","axios","post","then","response","console","log","data","token","JSON","stringify","localStorage","setItem","removeItem","mobile_no","otp","AdminLogin","dispatch","type","LOGIN_SUCCESS","payload","user","Promise","resolve","error","message","toString","LOGIN_FAIL","SET_MESSAGE","reject","toast","configure","Login","_Component","_inherits","_super","_createSuper","props","_this","call","onChangeEmailID","bind","_assertThisInitialized","onChangePassword","handleSubmit","state","history","listen","location","clearMessage","parse","getItem","e","target","this","setState","_this2","preventDefault","loading","Addform","validateAll","_this$props","checkBtn","context","_errors","length","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","window","href","closeonClick","catch","_this3","_this$props2","isLoggedIn","React","createElement","Fragment","className","style","src","logoImg","alt","height","Form","onSubmit","ref","c","onChange","CheckButton","display","Component","connect","auth","createBrowserHistory","CLEAR_MESSAGE","authHeader","module","exports"],"mappings":"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","file":"static/js/24.48347810.chunk.js","sourcesContent":["import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nclass AuthService {\n  AdminLogin(email_id, password) {\n\n    const insertData = new FormData();\n    insertData.set('email_id', email_id);\n    insertData.set('password', password);\n//loginadmin\n    return axios\n    //  .post(API_URL + \"login\", insertData )\n    .post(API_URL + \"login/loginadmin\", insertData )\n      .then((response) => {\n        console.log(\"loging resp\")\n        console.log(response)\n        if (response.data.token && typeof response.data.token !==\"undefined\" && response.data.token!==\"\") {\n\n          console.log(\"auth token\")\n          console.log(JSON.stringify(response.data))\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        \n        }else{\n          localStorage.removeItem(\"user\");\n        }  \n        return response.data;\n      });\n\n\n    // const insertData = new FormData();\n   \n  \n    // return axios\n    //   //.post(API_URL + \"api/admin/admin_login\", { email_id, password })\n    //   .post(API_URL + \"/login\",insertData)\n    //   .then((response) => {\n\n    //     if (response.data.token && typeof response.data.token !==\"undefined\" && response.data.token!==\"\") {\n    //       localStorage.setItem(\"user\", JSON.stringify(response.data));\n    //     }else{\n    //       localStorage.removeItem(\"user\");\n    //     }\n\n    //     return response.data;\n    //   });\n  }\n  \n  UserLoginOtp(mobile_no) {\n    return axios\n      .post(API_URL + \"api/admin/login\", { mobile_no })\n      .then((response) => {\n        return response.data;\n      });\n  }\n\n  UserLoginOtpVerify(mobile_no, otp) {\n    return axios\n      .post(API_URL + \"api/admin/login_otp_verify\", { mobile_no, otp })\n      .then((response) => {\n\n        console.log(\"service response:\");\n        console.log(response);\n        \n        if (response.data.token && typeof response.data.token !==\"undefined\" && response.data.token!==\"\") {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }else{\n          localStorage.removeItem(\"user\");\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"userId\");\n  }\n\n  logoutAdmin() {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"userId\");\n  }\n}\n\nexport default new AuthService();\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  OTP_SUCCESS,\n  OTP_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n  DATA_SUCCESS,\n  DATA_FAIL,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n\nexport const AdminLogin = (email_id, password) => (dispatch) => {\n  return AuthService.AdminLogin(email_id, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n      \n      return Promise.resolve(data);\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject(error);\n    }\n  );\n};\n\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};","import React, { Component } from \"react\";\nimport { Redirect, Router, Switch, Route, Link ,NavLink} from \"react-router-dom\";\n\nimport Form from \"react-validation/build/form\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { connect } from \"react-redux\";\n\nimport { clearMessage } from \"./../../actions/message\";\n\nimport { history } from './../../helpers/history';\n\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport $ from 'jquery';\nimport jQuery from 'jquery';\nimport Popper from 'popper.js';\n\nimport './../../assets/css/bootstrap.min.css'\nimport \"./../../assets/css/font-awesome.min.css\";\nimport \"./../../assets/css/style.css\"\nimport \"./../../assets/css/custom.css\"\n//import \"./../../App.css\";\n\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { AdminLogin } from \"./../../actions/auth\";\n\nimport logoImg from './../../assets/img/logo2.png';\n\ntoast.configure();\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeEmailID = this.onChangeEmailID.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      email_id:\"\",\n      password:\"\",        \n    };\n\n    history.listen((location) => {\n      props.dispatch(clearMessage()); // clear message when changing location\n    });\n  }\n\n  componentDidMount() {\n    let token = JSON.parse(localStorage.getItem(\"user\"));\n    // alert(token)\n        if (token && token !== \"\" && typeof token !== \"undefined\") {\n          // this.setState({\n          //   isTokenFound: true\n          // },()=>{console.log(\"ISTOKEN\",this.state.isTokenFound);})\n          // window.location.href=\"/admin/dashboard\"\n        }\n  }\n\n  onChangeEmailID(e) {\n    console.log(\"email id is i\")\n    console.log(e.target.value)\n    this.setState({\n      email_id: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\nconsole.log(\"submit btuon\")\n    this.setState({\n      loading: true,\n    });\n\n    this.Addform.validateAll();\n\n    const { dispatch, history } = this.props;\n\n    if (this.checkBtn.context._errors.length === 0) {\n      dispatch(AdminLogin(this.state.email_id, this.state.password))\n        .then((response) => {\n          console.log(\"response reced\")\n          console.log(response)\n          if(response.success || response.success ===\"true\" || response.success ===true){\n            toast.success('successful..!', {position: \"bottom-right\", autoClose: 5000, hideProgressBar: false, closeOnClick: true, pauseOnHover: true, draggable: true, progress: undefined, });\n          // history.push(\"/admin/dashboard\");\n          window.location.href=\"/admin/dashboard\"\n        }else{\n          toast.error(response.message, {position: \"bottom-right\", autoClose: 5000, hideProgressBar: false, closeonClick: true, pauseOnHover: true, draggable: true, progress: undefined, });\n        }\n        })\n        .catch(() => {\n          this.setState({\n            loading: false\n          });\n          toast.error(\"something went wrong..!!\", {position: \"bottom-right\", autoClose: 5000, hideProgressBar: false, closeOnClick: true, pauseOnHover: true, draggable: true, progress: undefined, });\n        });\n    } else {\n      this.setState({\n        loading: false,\n      });\n      toast.error(\"something went wrong..!!\", {position: \"bottom-right\", autoClose: 5000, hideProgressBar: false, closeOnClick: true, pauseOnHover: true, draggable: true, progress: undefined, });\n    }\n  }\n\n  render() {\n\n    const { isLoggedIn, message } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className=\"account-page login-page-body\" style={{'background-color':'#ef493e!important'}}>\n          <div className=\"main-wrapper\">\n            <div className=\"account-content\">\n              {/*<a href=\"job-list.html\" className=\"btn btn-primary apply-btn\">Apply Job</a>*/}\n              <div className=\"container\">\n              \n                <div className=\"account-logo\">\n                <a href=\"javascript:void(0)\"><img src={logoImg} alt=\"Harraj\" height=\"110px\"/></a>\n                </div>\n                \n                <div className=\"account-box\">\n                  <div className=\"account-wrapper\">\n                    <h3 className=\"account-title\">Login</h3>\n                    {/*<p className=\"account-subtitle\">Access to our dashboard</p>*/}\n                    \n                    <Form onSubmit={this.handleSubmit} ref={(c) => { this.Addform = c; }}>\n                      <div className=\"form-group\">\n                        <label>Email</label>\n                        <input className=\"form-control\" type=\"text\" onChange={this.onChangeEmailID}/>\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"row\">\n                          <div className=\"col\">\n                            <label>Password</label>\n                          </div>\n                          {/*<div className=\"col-auto\">\n                            <a className=\"text-muted\" href=\"forgot-password.html\">\n                              Forgot password?\n                            </a>\n                          </div>*/}\n                        </div>\n                        <input className=\"form-control\" type=\"password\" onChange={this.onChangePassword}/>\n                      </div>\n                      <div className=\"form-group text-center\">\n                        <button className=\"btn btn-primary account-btn\" type=\"submit\">Login</button>\n                       {/* <NavLink to={\"/admin/dashboard\"} className=\"btn btn-primary account-btn\" type=\"submit\">Login</NavLink>*/}\n                      </div>\n                      {/* <div className=\"account-footer\">\n                        <p><a href=\"register.html\">Forgot password?</a></p>\n                      </div> */}\n                      <CheckButton\n                          style={{ display: \"none\" }}\n                          ref={(c) => {\n                            this.checkBtn = c;\n                          }}\n                        />\n                      {/*<div className=\"account-footer\">\n                        <p>Don't have an account yet? <a href=\"register.html\">Register</a></p>\n                      </div>*/}\n                    </Form>\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n\n  const { user } = state.auth;\n  const { isLoggedIn } = state.auth;\n  const { message } = state.message;\n  return {\n    user,\n    isLoggedIn,\n    message\n  };\n}\n\nexport default connect(mapStateToProps)(Login);","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\n\nexport const setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\nexport const clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.token) {\r\n    return { \"x-access-token\": user.token };\r\n  }  \r\n  else {\r\n    return {};\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo2.462c788f.png\";"],"sourceRoot":""}